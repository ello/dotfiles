" Disable vi compatibility
set nocompatible

" Plugins
" -----------------------------------------------------------------------------
call plug#begin('~/.vim/plugged')

" Editor
Plug 'ctrlpvim/ctrlp.vim'
Plug 'wincent/ferret'
Plug 'scrooloose/nerdtree'
Plug 'mkitt/polarized'
Plug 'yssl/QFEnter'
Plug 'ervandew/supertab'
Plug 'scrooloose/syntastic'
Plug 'mkitt/tabline.vim'
Plug 'ton/vim-bufsurf'
Plug 'henrik/vim-indexed-search'
Plug 'terryma/vim-multiple-cursors'
Plug 'nelstrom/vim-visual-star-search'
Plug 'vim-scripts/YankRing.vim'

" Editing
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-unimpaired'

" Filetypes
Plug 'othree/html5.vim'
Plug 'keith/swift.vim'
Plug 'kchmck/vim-coffee-script'
Plug 'fatih/vim-go'
Plug 'digitaltoad/vim-jade'
Plug 'pangloss/vim-javascript'
Plug 'mxw/vim-jsx'
Plug 'tpope/vim-rails'

" Utility
Plug 'tpope/vim-fugitive'

" Add local bundles
if filereadable(expand("~/.vimrc.bundles"))
  source ~/.vimrc.bundles
endif

call plug#end()

runtime! macros/matchit.vim
filetype plugin indent on
syntax enable

" Preferences
" -----------------------------------------------------------------------------
set autoindent
set autoread
set autowrite
set backspace=2
set clipboard=unnamed
set complete-=i
set completeopt=longest,menu
set directory=~/.vim/tmp/swap/
set display+=lastline
set expandtab
set formatoptions+=j
set hidden
set history=1000
set hlsearch
set ignorecase
set incsearch
set laststatus=2
set list
set listchars=tab:▸\ ,eol:¬,trail:·
set mouse=a
set nobackup
set nojoinspaces
set noshowcmd
set nostartofline
set nowrap
set nrformats-=octal
set number
set ruler
set scrolloff=3
set sessionoptions-=options
set shiftround
set shiftwidth=2
set showmatch
set sidescrolloff=3
set smartcase
set smartindent
set smarttab
set softtabstop=2
set splitright splitbelow
set tabstop=2
set title
set ttimeout
set ttimeoutlen=50
set ttyfast
set undolevels=1000
set wildignore+=*.DS_Store
set wildmenu
set wildmode=longest:full,full

if has("balloon_eval") && has("unix")
  set ballooneval
endif

if &t_Co == 8 && $TERM !~# '^linux'
  set t_Co=16
endif

if executable('ag')
  set grepprg=ag\ --nogroup\ --nocolor
  let g:ctrlp_user_command='ag -Q -l --nocolor --ignore vendor/bundle -g "" %s'
  let g:ctrlp_use_caching=0
endif

let g:ctrlp_by_filename=1
let g:ctrlp_extensions=['line']
let g:ctrlp_cache_dir=$HOME.'/.vim/tmp/ctrlp/'
let g:ctrlp_custom_ignore='vendor/bundle\|.sass-cache\|.bundle\|tmp\|.git$'

let g:FerretMap=0

let g:netrw_liststyle=3

let g:NERDTreeWinSize=40
let g:NERDTreeMinimalUI=1
let g:NERDTreeAutoDeleteBuffer=1
let g:NERDTreeMapUpdir='-'

let g:SuperTabLongestEnhanced=1
let g:SuperTabLongestHighlight=0

" Open quick fix and location windows with ctrlp commands
let g:qfenter_enable_autoquickfix=0
let g:qfenter_vopen_map=['<C-v>']
let g:qfenter_hopen_map=['<C-CR>', '<C-s>', '<C-x>']
let g:qfenter_topen_map=['<C-t>']

let g:syntastic_auto_loc_list=1
let g:syntastic_mode_map={'mode': 'active','passive_filetypes': ['scss', 'sass']}
let g:syntastic_html_tidy_inline_tags=['svg', 'path', 'circle']
let g:syntastic_html_tidy_ignore_errors=["<title> isn't allowed", ' before <title>']
let g:syntastic_javascript_checkers=['eslint']
let g:syntastic_javascript_eslint_args="--rule 'no-console: 0'"

let g:yankring_window_height=10
let g:yankring_history_dir=$HOME.'/.vim/tmp/yankring/'

let g:indexed_search_show_index_mappings=0
let g:indexed_search_colors=0

let g:javascript_enable_domhtmlcss=1
let g:jsx_ext_required=0
let g:coffee_compile_vert=1

" Mappings
" -----------------------------------------------------------------------------
" RSI reduction
nnoremap j gj
nnoremap k gk

" Visually select the text that was last edited/pasted
nnoremap gV `[v`]

" Move between splits
noremap <C-h> <C-w>h
noremap <C-j> <C-w>j
noremap <C-k> <C-w>k
noremap <C-l> <C-w>l

" Function keys
let g:ctrlp_map='<F1>'
noremap <F2> :NERDTreeToggle<cr>
noremap <F3> :CtrlPBuffer<cr>
nmap <F4> <Plug>(FerretAck)
nmap <F5> <Plug>(FerretAckWord)
vnoremap <F5> y:Ack -Q <C-r>=fnameescape(@")<cr><cr>
noremap <F10> :vertical wincmd f<CR>
noremap <F11> :BufSurfBack<cr>
noremap <F12> :BufSurfForward<cr>

" NERDTree in a buffer (like netrw)
nnoremap <silent>- :silent edit %:p:h<cr>
nnoremap <silent>_ :silent edit .<cr>

" Clear the search highlight
noremap <silent><leader>\ :nohlsearch<cr>

" Remove whitespace
noremap <silent><leader>CW :%s/\s\+$//<cr>:let @/=''<cr>:nohlsearch<cr>

" Yank/paste contents using an unnamed register
vnoremap <silent><leader>y "xy
noremap <silent><leader>p "xp

" Filetypes
" -----------------------------------------------------------------------------
func Eatchar(pat)
  let c = nr2char(getchar(0))
  return (c =~ a:pat) ? '' : c
endfunc

if has("autocmd")
  augroup FTOptions
    autocmd!
    autocmd BufNewFile,BufReadPost *.md set filetype=markdown
    autocmd FileType markdown,text,txt setlocal tw=80 linebreak nolist wrap spell
    autocmd BufRead,BufNewFile .{babel,eslint}rc set filetype=json

    " vim-go keybindings
    autocmd FileType go nmap <leader>r <Plug>(go-run)
    autocmd FileType go nmap <leader>b <Plug>(go-build)
    autocmd FileType go nmap <leader>t <Plug>(go-test)
    autocmd FileType go nmap <leader>c <Plug>(go-coverage)
    autocmd FileType go nmap <Leader>ds <Plug>(go-def-split)
    autocmd FileType go nmap <Leader>dv <Plug>(go-def-vertical)
    autocmd FileType go nmap <Leader>dt <Plug>(go-def-tab)
    autocmd FileType go nmap <Leader>gd <Plug>(go-doc)
    autocmd FileType go nmap <Leader>gv <Plug>(go-doc-vertical)
    autocmd FileType go nmap <Leader>gb <Plug>(go-doc-browser)
    autocmd FileType go nmap <Leader>s <Plug>(go-implements)
    autocmd FileType go nmap <Leader>i <Plug>(go-info)
    autocmd FileType go nmap <Leader>e <Plug>(go-rename)

    " Abbreviations
    autocmd FileType sass iabbrev <buffer> bgc background-color:
    autocmd FileType coffee iabbrev <buffer> cdl console.log
    autocmd FileType javascript iabbrev <buffer> cdl console.log()<Left><C-R>=Eatchar('\s')<CR>
    autocmd FileType * iabbrev <buffer> lrm Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
  augroup END
endif

" Theme
" -----------------------------------------------------------------------------
set background=dark
colorscheme polarized

" Load user config
" -----------------------------------------------------------------------------
if filereadable(expand("~/.vimrc.local"))
  source ~/.vimrc.local
endif

